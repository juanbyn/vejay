var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __extends = (this && this.__extends) || (function () {
            var extendStatics = Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
            return function (d, b) {
                extendStatics(d, b);
                function __() { this.constructor = d; }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        })();

{"version":3,"sources":["../src/utils/Dictionary.ts","../src/utils/math/Rectangle.ts","../src/utils/math/NumberUtils.ts","../src/utils/math/Matrix.ts","../src/utils/math/Point.ts","../src/process/MsgEvent.ts","../src/process/Process.ts","../src/global/GlobalData.ts","../src/core/base/EventDispatcher.ts","../src/core/base/SingletonFactory.ts","../src/core/Font.ts","../src/display/DisplayObject.ts","../src/display/DisplayObjectContainer.ts","../src/display/Sprite.ts","../src/display/component/Component.ts","../src/display/Stage.ts","../src/display/component/Image.ts","../src/Main.ts","../src/core/Vo.ts","../src/event/Event.ts","../src/event/EventModel.ts","../src/event/EventProcess.ts","../src/event/MouseEvent.ts","../src/display/DisplayProcess.ts","../src/display/RenderContext.ts","../src/manager/FrameManager.ts","../src/process/IProcess.ts"],"names":[],"mappings":"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","file":"vejay.js","sourcesContent":["/**\n * Created by cjb on 2018-05-01\n */\nmodule Vejay.utils {\n    export class Dictionary {\n        private _obj: Object = {};\n        //private _num: number = 0;\n        \n        public get keys(): Array<string> {\n            var arr = [];\n            for (var key in this._obj) {\n                arr.push(key);\n            }\n            return arr;\n        }\n        \n        public get values(): Array<any> {\n            var arr = [];\n            // for (var value of this._obj) {\n            //     arr.push(value);\n            // }\n            for (var key in this._obj) {\n                arr.push(this._obj[key]);\n            }\n            return arr;\n        }\n        \n        public set(key: string, value: any): void {\n            this._obj[key] = value;\n           // this._num++;\n        }\n        \n        public get(key: string): any {\n            var value = this._obj[key];\n            if (value !== undefined) {\n                return value;\n            }\n            return null;\n        }\n        \n        public has(key: string): boolean {\n            return this._obj.hasOwnProperty(key);\n        }\n        \n        public remove(key: string): void {\n            delete this._obj[key];\n           // this._num--;\n        }\n        \n        // public get count(): number {\n        //     return this._num;\n        // }\n        \n        public clear(): void {\n            this._obj = {};\n           // this._num = 0;\n        }\n        \n    }\n}\n","module Vejay.utils.math {\n    \n    let rectanglePool: Rectangle[] = [];\n    \n    /**\n     * Rectangle 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。<br/>\n     * Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。\n     * 但是，right 和 bottom 属性与这四个属性是整体相关的。例如，如果更改 right 属性的值，则 width\n     * 属性的值将发生变化；如果更改 bottom 属性，则 height 属性的值将发生变化。\n     */\n    export class Rectangle {\n        \n        /**\n         * 释放一个Rectangle实例到对象池\n         */\n        public static release(rect: Rectangle): void {\n            if (!rect) {\n                return;\n            }\n            rectanglePool.push(rect);\n        }\n        \n        /**\n         * 从对象池中取出或创建一个新的Rectangle对象。\n         */\n        public static create(): Rectangle {\n            let rect = rectanglePool.pop();\n            if (!rect) {\n                rect = new Rectangle();\n            }\n            return rect;\n        }\n        \n        public x: number;\n        public y: number;\n        public width: number;\n        public height: number;\n        \n        public constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n            this.x = x;\n            this.y = y;\n            this.width = width;\n            this.height = height;\n        }\n        \n        /**\n         * x 和 width 属性的和。\n         */\n        public get right(): number {\n            return this.x + this.width;\n        }\n        \n        public set right(value: number) {\n            this.width = value - this.x;\n        }\n        \n        /**\n         * y 和 height 属性的和。\n         */\n        public get bottom(): number {\n            return this.y + this.height;\n        }\n        \n        public set bottom(value: number) {\n            this.height = value - this.y;\n        }\n        \n        /**\n         * 矩形左上角的 x 坐标。更改 Rectangle 对象的 left 属性对 y 和 height 属性没有影响。但是，它会影响 width 属性，而更改 x 值不会影响 width 属性。\n         * left 属性的值等于 x 属性的值。\n         */\n        public get left(): number {\n            return this.x;\n        }\n        \n        public set left(value: number) {\n            this.width += this.x - value;\n            this.x = value;\n        }\n        \n        /**\n         * 矩形左上角的 y 坐标。更改 Rectangle 对象的 top 属性对 x 和 width 属性没有影响。但是，它会影响 height 属性，而更改 y 值不会影响 height 属性。<br/>\n         * top 属性的值等于 y 属性的值。\n         */\n        public get top(): number {\n            return this.y;\n        }\n        \n        public set top(value: number) {\n            this.height += this.y - value;\n            this.y = value;\n        }\n        \n        /**\n         * 由该点的 x 和 y 坐标确定的 Rectangle 对象左上角的位置。\n         */\n        public get topLeft(): Point {\n            return new Point(this.left, this.top);\n        }\n        \n        public set topLeft(value: Point) {\n            this.top = value.y;\n            this.left = value.x;\n        }\n        \n        /**\n         * 由 right 和 bottom 属性的值确定的 Rectangle 对象的右下角的位置。\n         */\n        public get bottomRight(): Point {\n            return new Point(this.right, this.bottom);\n        }\n        \n        public set bottomRight(value: Point) {\n            this.bottom = value.y;\n            this.right = value.x;\n        }\n        \n        /**\n         * 将源 Rectangle 对象中的所有矩形数据复制到调用方 Rectangle 对象中。\n         * @param sourceRect 要从中复制数据的 Rectangle 对象。\n         */\n        public copyFrom(sourceRect: Rectangle): Rectangle {\n            this.x = sourceRect.x;\n            this.y = sourceRect.y;\n            this.width = sourceRect.width;\n            this.height = sourceRect.height;\n            return this;\n        }\n        \n        /**\n         * 将 Rectangle 的成员设置为指定值\n         * @param x 矩形左上角的 x 坐标。\n         * @param y 矩形左上角的 y 坐标。\n         * @param width 矩形的宽度（以像素为单位）。\n         * @param height 矩形的高度（以像素为单位）。\n         */\n        public setTo(x: number, y: number, width: number, height: number): Rectangle {\n            this.x = x;\n            this.y = y;\n            this.width = width;\n            this.height = height;\n            return this;\n        }\n        \n        /**\n         * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\n         * @param x 检测点的x轴\n         * @param y 检测点的y轴\n         * @returns 如果检测点位于矩形内，返回true，否则，返回false\n         */\n        public contains(x: number, y: number): boolean {\n            return this.x <= x &&\n                this.x + this.width >= x &&\n                this.y <= y &&\n                this.y + this.height >= y;\n        }\n        \n        /**\n         * 如果在 toIntersect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，\n         * 则此方法返回一个空的 Rectangle 对象，其属性设置为 0。\n         * @param toIntersect 要对照比较以查看其是否与此 Rectangle 对象相交的 Rectangle 对象。\n         * @returns 等于交集区域的 Rectangle 对象。如果该矩形不相交，则此方法返回一个空的 Rectangle 对象；即，其 x、y、width 和\n         * height 属性均设置为 0 的矩形。\n         */\n        public intersection(toIntersect: Rectangle): Rectangle {\n            return this.clone().$intersectInPlace(toIntersect);\n        }\n        \n        /**\n         * 按指定量增加 Rectangle 对象的大小（以像素为单位）\n         * 保持 Rectangle 对象的中心点不变，使用 dx 值横向增加它的大小，使用 dy 值纵向增加它的大小。\n         * @param dx Rectangle 对象横向增加的值。\n         * @param dy Rectangle 对象纵向增加的值。\n         */\n        public inflate(dx: number, dy: number): void {\n            this.x -= dx;\n            this.width += 2 * dx;\n            this.y -= dy;\n            this.height += 2 * dy;\n        }\n        \n        /**\n         * @private\n         */\n        $intersectInPlace(clipRect: Rectangle): Rectangle {\n            let x0 = this.x;\n            let y0 = this.y;\n            let x1 = clipRect.x;\n            let y1 = clipRect.y;\n            let l = Math.max(x0, x1);\n            let r = Math.min(x0 + this.width, x1 + clipRect.width);\n            if (l <= r) {\n                let t = Math.max(y0, y1);\n                let b = Math.min(y0 + this.height, y1 + clipRect.height);\n                if (t <= b) {\n                    this.setTo(l, t, r - l, b - t);\n                    return this;\n                }\n            }\n            this.setEmpty();\n            return this;\n        }\n        \n        /**\n         * 确定在 toIntersect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle\n         * 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\n         * @param toIntersect 要与此 Rectangle 对象比较的 Rectangle 对象。\n         * @returns 如果两个矩形相交，返回true，否则返回false\n         */\n        public intersects(toIntersect: Rectangle): boolean {\n            return Math.max(this.x, toIntersect.x) <= Math.min(this.right, toIntersect.right)\n                && Math.max(this.y, toIntersect.y) <= Math.min(this.bottom, toIntersect.bottom);\n        }\n        \n        /**\n         * 确定此 Rectangle 对象是否为空。\n         * @returns 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\n         */\n        public isEmpty(): boolean {\n            return this.width <= 0 || this.height <= 0;\n        }\n        \n        /**\n         * 将 Rectangle 对象的所有属性设置为 0。\n         */\n        public setEmpty(): void {\n            this.x = 0;\n            this.y = 0;\n            this.width = 0;\n            this.height = 0;\n        }\n        \n        /**\n         * 返回一个新的 Rectangle 对象，其 x、y、width 和 height 属性的值与原始 Rectangle 对象的对应值相同。\n         * @returns 新的 Rectangle 对象，其 x、y、width 和 height 属性的值与原始 Rectangle 对象的对应值相同。\n         */\n        public clone(): Rectangle {\n            return new Rectangle(this.x, this.y, this.width, this.height);\n        }\n        \n        /**\n         * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\n         * 此方法与 Rectangle.contains() 方法类似，只不过它采用 Point 对象作为参数。\n         * @param point 包含点对象\n         * @returns 如果包含，返回true，否则返回false\n         */\n        public containsPoint(point: Point): boolean {\n            if (this.x <= point.x\n                && this.x + this.width > point.x\n                && this.y <= point.y\n                && this.y + this.height > point.y) {\n                return true;\n            }\n            return false;\n        }\n        \n        /**\n         * 确定此 Rectangle 对象内是否包含由 rect 参数指定的 Rectangle 对象。\n         * 如果一个 Rectangle 对象完全在另一个 Rectangle 的边界内，我们说第二个 Rectangle 包含第一个 Rectangle。\n         * @param rect 所检查的 Rectangle 对象\n         * @returns 如果此 Rectangle 对象包含您指定的 Rectangle 对象，则返回 true 值，否则返回 false。\n         */\n        public containsRect(rect: Rectangle): boolean {\n            let r1 = rect.x + rect.width;\n            let b1 = rect.y + rect.height;\n            let r2 = this.x + this.width;\n            let b2 = this.y + this.height;\n            return (rect.x >= this.x) && (rect.x < r2) && (rect.y >= this.y) && (rect.y < b2) && (r1 > this.x) && (r1 <= r2) && (b1 > this.y) && (b1 <= b2);\n        }\n        \n        /**\n         * 判断是否与另外一个 Rectangle 对象相交\n         * @param {utils.math.Rectangle} rect\n         * @returns {boolean}\n         */\n        public isIntersectRect(rect: Rectangle): boolean {\n            return (rect.x >= this.x && rect.x <= this.right) || (rect.y >= this.y && rect.y <= this.bottom)\n                || (rect.right >= this.x && rect.right <= this.right) || (rect.bottom >= this.y && rect.bottom <= this.bottom);\n        }\n        \n        /**\n         * 确定在 toCompare 参数中指定的对象是否等于此 Rectangle 对象。\n         * 此方法将某个对象的 x、y、width 和 height 属性与此 Rectangle 对象所对应的相同属性进行比较。\n         * @param toCompare 要与此 Rectangle 对象进行比较的矩形。\n         * @returns 如果对象具有与此 Rectangle 对象完全相同的 x、y、width 和 height 属性值，则返回 true 值，否则返回 false。\n         */\n        public equals(toCompare: Rectangle): boolean {\n            if (this === toCompare) {\n                return true;\n            }\n            return this.x === toCompare.x && this.y === toCompare.y\n                && this.width === toCompare.width && this.height === toCompare.height;\n        }\n        \n        /**\n         * 增加 Rectangle 对象的大小。此方法与 Rectangle.inflate() 方法类似，只不过它采用 Point 对象作为参数。\n         * @param point The x property of this Point object is used to increase the horizontal dimension of the Rectangle object. The y property is used to increase the vertical dimension of the Rectangle object.\n         */\n        public inflatePoint(point: Point): void {\n            this.inflate(point.x, point.y);\n        }\n        \n        /**\n         * 按指定量调整 Rectangle 对象的位置（由其左上角确定）。\n         * @param dx 将 Rectangle 对象的 x 值移动此数量。\n         * @param dy 将 Rectangle 对象的 t 值移动此数量。\n         */\n        public offset(dx: number, dy: number): void {\n            this.x += dx;\n            this.y += dy;\n        }\n        \n        /**\n         * 将 Point 对象用作参数来调整 Rectangle 对象的位置。此方法与 Rectangle.offset() 方法类似，只不过它采用 Point 对象作为参数。\n         * @param point 要用于偏移此 Rectangle 对象的 Point 对象。\n         */\n        public offsetPoint(point: Point): void {\n            this.offset(point.x, point.y);\n        }\n        \n        /**\n         * 生成并返回一个字符串，该字符串列出 Rectangle 对象的水平位置和垂直位置以及高度和宽度。\n         * @returns 一个字符串，它列出了 Rectangle 对象的下列各个属性的值：x、y、width 和 height。\n         */\n        public toString(): string {\n            return \"(x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n        }\n        \n        /**\n         * 通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。\n         * @param toUnion 要添加到此 Rectangle 对象的 Rectangle 对象。\n         * @returns 充当两个矩形的联合的新 Rectangle 对象。\n         */\n        public union(toUnion: Rectangle): Rectangle {\n            let result = this.clone();\n            if (toUnion.isEmpty()) {\n                return result;\n            }\n            if (result.isEmpty()) {\n                result.copyFrom(toUnion);\n                return result;\n            }\n            let l: number = Math.min(result.x, toUnion.x);\n            let t: number = Math.min(result.y, toUnion.y);\n            result.setTo(l, t,\n                Math.max(result.right, toUnion.right) - l,\n                Math.max(result.bottom, toUnion.bottom) - t);\n            return result;\n        }\n        \n        /**\n         * @private\n         */\n        $getBaseWidth(angle: number): number {\n            let u = Math.abs(Math.cos(angle));\n            let v = Math.abs(Math.sin(angle));\n            return u * this.width + v * this.height;\n        }\n        \n        /**\n         * @private\n         */\n        $getBaseHeight(angle: number): number {\n            let u = Math.abs(Math.cos(angle));\n            let v = Math.abs(Math.sin(angle));\n            return v * this.width + u * this.height;\n        }\n    }\n    \n    /**\n     * @private\n     * 仅供框架内复用，要防止暴露引用到外部。\n     */\n    export let $TempRectangle = new Rectangle();\n}","/**\n * Created by cjb on 2018/5/3\n */\nmodule Vejay.utils.math {\n    export class NumberUtils {\n        public static TWO_PI: number = Math.PI * 2.0;\n        public static Deg2Rad: number = Math.PI / 180;\n        public static Rad2Deg: number = 180 / Math.PI;\n        private static num: number = 0;\n        \n        /**\n         * 获取一个在min和max之间的随机数，包括min，不包括max\n         */\n        public static getRand(min: number, max: number): number {\n            var random: number = Math.random();\n            return min + (max - min) * random;\n        }\n        \n        /**\n         * 获取一个在min和max之间的随机数，包括min和max\n         */\n        public static getIntRand(min: number, max: number): number {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n        \n        /**\n         * 小数点后四舍五入\n         * @param value\n         * @param n 默认小数点后两位\n         * @returns {number}\n         */\n        public static roundN(value: number, n: number = 2): number {\n            var base: number = Math.pow(10, n);\n            return Math.round(value * base) / base;\n        }\n        \n        /**\n         * 简单的新ID\n         */\n        public static get newGuid(): string {\n            this.num += 1;\n            if (this.num === 100) {\n                this.num = 0;\n            }\n            return Date.now() + this.num.toString();\n        }\n        \n        /**\n         * 获取倾斜的角度180,右为0度\n         */\n        public static getAngle(beginX: number, beginY: number, endX: number, endY: number): number {\n            let offsetY: number = endY - beginY;\n            let offsetX: number = endX - beginX;\n            var radian: number = Math.atan2(offsetY, offsetX);\n            let angle = radian * this.Rad2Deg;\n            return angle;\n        }\n        \n        /**\n         * 验证一个点是否在一个扇形范围内\n         * @param range 扇形范围\n         * @param degree 扇形中心点角度\n         * @param x1 扇形中心点x\n         * @param y1 扇形中心点y\n         * @param x2 目标点x\n         * @param y2 目标点y\n         */\n        public static isINSector(range: number, degree: number, x1: number, y1: number, x2: number, y2: number): boolean {\n            let diff = range / 2;\n            let d1 = degree - diff;\n            let d2 = degree + diff;\n            let _degree = NumberUtils.getAngle(x1, y1, x2, y2); // 角度\n            \n            if (d2 > d1 && _degree >= d1 && _degree <= d2) {\n                return true;\n            } else if (d1 > d2 && (_degree >= d1 || _degree <= d2)) {\n                return true;\n            }\n            return false;\n        }\n        \n        /**\n         * 计算两点之间距离\n         */\n        public static getDistance(x1: number, y1: number, x2: number, y2: number): number {\n            var distance: number = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n            return Math.sqrt(distance);\n        }\n        \n        /**\n         * 计算点是否在一个矩形范围内\n         */\n        public static isInRange(x: number, y: number, rectangle: Rectangle): boolean {\n            if (x > rectangle.x && y > rectangle.y && x < rectangle.x + rectangle.width && y < rectangle.y + rectangle.height) {\n                return true;\n            }\n            return false;\n        }\n        \n        /**\n         \n         * 从（beginX，beginY）到（endX，endY）的连线中，获取离（endX，endY）距离为distance的点\n         \n         * 用于寻路到离目标点最远的点\n         \n         */\n        \n        /*     public static getNearestPoint(beginX: number, beginY: number, endX: number, endY: number, distance: number): Laya.Point {\n          var q: number = this.getDistance(beginX, beginY, endX, endY);\n          var param: number = (q - distance) / q;\n          var rx: number = beginX - (beginX - endX) * param;\n          var ry: number = beginY - (beginY - endY) * param;\n          var r: Laya.Point = new Laya.Point(rx, ry);\n          return r;\n        } */\n        \n        /**\n         * 以（beginX，beginY）为原点，根据指定角度、指定距离，算出点（endX，endY）\n         * 用于角色施法，以角色为中心，向某个方向施放一个指定距离的技能\n         */\n        public static getAnglePoint(beginX: number, beginY: number, angle: number, distance: number): Point {\n            var radian: number = angle * Math.PI / 180;\n            var rx: number = beginX + Math.sin(radian) * distance;\n            var ry: number = beginY - Math.cos(radian) * distance;\n            var r: Point = new Point(rx, ry);\n            return r;\n        }\n        \n        /**\n         * 从（beginX，beginY）到（endX，endY）的连线中，获取离（beginX，beginY）距离为distance的偏移点\n         * 用于寻路到离目标点最近的点\n         */\n        public static getNearestPoint(beginX: number, beginY: number, endX: number, endY: number, distance: number): Point {\n            var r: Point = new Point();\n            var q: number = this.getDistance(beginX, beginY, endX, endY);\n            if (q < distance) {\n                r.setTo(endX - beginX, endY - beginY);\n            } else {\n                var angle = this.getAngle(beginX, beginY, endX, endY) + 90;\n                var radian: number = angle * Math.PI / 180;\n                var rx: number = Math.sin(radian) * distance;\n                var ry: number = -Math.cos(radian) * distance;\n                r.setTo(rx, ry);\n            }\n            return r;\n        }\n        \n        /**\n         * 根据角度,8方向判断\n         */\n        \n        public static get8Direction(degree: number) {\n            if (degree >= -45 && degree < 45) {\n                return 6;\n            } else if (degree >= 45 && degree < 135) {\n                return 2;\n            } else if (degree >= 135 || degree < -135) {\n                return 4;\n            } else if (degree >= -135 && degree < -45) {\n                return 8;\n            }\n        }\n        \n        /**\n         * 根据2个点,8方向判断\n         */\n        \n        public static get8Direction2(beginX: number, beginY: number, endX: number, endY: number) {\n            let degree = this.getAngle(beginX, beginY, endX, endY);\n            if (degree >= -45 && degree < 45) {\n                return 6;\n            } else if (degree >= 45 && degree < 135) {\n                return 2;\n            } else if (degree >= 135 || degree < -135) {\n                return 4;\n            } else if (degree >= -135 && degree < -45) {\n                return 8;\n            }\n        }\n        \n        /**\n         \n         * 根据角度和X轴长度，计算Y轴长度\n         \n         */\n        /*     public static getYByAngle(angle: number, x: number): number {\n          var angleRadians: number = angle * Math.PI / 180;\n    \n          return x * Math.tan(angleRadians);\n        } */\n        \n        /**\n         \n         * 将以10000为单位的百分比转化成小数\n         \n         * **/\n        /*     public static transValToRatio(val: number): number {\n          var ratio: number = val / 10000;\n          return ratio;\n        } */\n        \n        /**\n         \n         * 将以10000为单位的百分比转化成百分数\n         \n         * **/\n        /*     public static transValToPercent(val: number): number {\n          var percent: number = val / 100;\n          return percent;\n        } */\n        \n        /**\n         \n         * 装换为几位数\n         \n         * **/\n        /*     public static formatIntPlaces(val: number, places: number): String {\n          var valStr: String = val.toString();\n          while (valStr.length < places) {\n            valStr = '0' + valStr;\n          }\n          return valStr;\n        } */\n    }\n}\n\n","\nmodule Vejay.utils.math {\n\n    let PI = Math.PI;\n    let TwoPI = PI * 2;\n    let DEG_TO_RAD:number = PI / 180;\n\n    let matrixPool:Matrix[] = [];\n    /**\n     * The Matrix class represents a transformation matrix that determines how to map points from one coordinate space to\n     * another. You can perform various graphical transformations on a display object by setting the properties of a Matrix\n     * object, applying that Matrix object to the matrix property of a display object, These transformation functions include\n     * translation (x and y repositioning), rotation, scaling, and skewing.\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @includeExample egret/geom/Matrix.ts\n     * @language en_US\n     */\n    /**\n     * Matrix 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。\n     * 您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix\n     * 对象应用于显示对象的 matrix 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @includeExample egret/geom/Matrix.ts\n     * @language zh_CN\n     */\n    export class Matrix {\n\n        /**\n         * Releases a matrix instance to the object pool\n         * @param matrix matrix that Needs to be recycled\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 释放一个Matrix实例到对象池\n         * @param matrix 需要回收的 matrix\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public static release(matrix:Matrix):void {\n            if(!matrix){\n                return;\n            }\n            matrixPool.push(matrix);\n        }\n\n        /**\n         * get a matrix instance from the object pool or create a new one.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 从对象池中取出或创建一个新的Matrix对象。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public static create():Matrix {\n            let matrix = matrixPool.pop();\n            if (!matrix) {\n                matrix = new Matrix();\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a new Matrix object with the specified parameters.\n         * @param a The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\n         * @param b The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\n         * @param c The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\n         * @param d The value that affects the positioning of pixels along the y axis when scaling or rotating an image..\n         * @param tx The distance by which to translate each point along the x axis.\n         * @param ty The distance by which to translate each point along the y axis.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 使用指定参数创建一个 Matrix 对象\n         * @param a 缩放或旋转图像时影响像素沿 x 轴定位的值。\n         * @param b 旋转或倾斜图像时影响像素沿 y 轴定位的值。\n         * @param c 旋转或倾斜图像时影响像素沿 x 轴定位的值。\n         * @param d 缩放或旋转图像时影响像素沿 y 轴定位的值。\n         * @param tx 沿 x 轴平移每个点的距离。\n         * @param ty 沿 y 轴平移每个点的距离。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        constructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n            this.d = d;\n            this.tx = tx;\n            this.ty = ty;\n        }\n\n        /**\n         * The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\n         * @default 1\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 缩放或旋转图像时影响像素沿 x 轴定位的值\n         * @default 1\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public a:number;\n        /**\n         * The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 旋转或倾斜图像时影响像素沿 y 轴定位的值\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public b:number;\n        /**\n         * The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 旋转或倾斜图像时影响像素沿 x 轴定位的值\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public c:number;\n        /**\n         * The value that affects the positioning of pixels along the y axis when scaling or rotating an image.\n         * @default 1\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 缩放或旋转图像时影响像素沿 y 轴定位的值\n         * @default 1\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public d:number;\n        /**\n         * The distance by which to translate each point along the x axis.\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 沿 x 轴平移每个点的距离\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public tx:number;\n\n        /**\n         * The distance by which to translate each point along the y axis.\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 沿 y 轴平移每个点的距离\n         * @default 0\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public ty:number;\n\n        /**\n         * Returns a new Matrix object that is a clone of this matrix, with an exact copy of the contained object.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 返回一个新的 Matrix 对象，它是此矩阵的克隆，带有与所含对象完全相同的副本。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public clone():Matrix {\n            return new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n        }\n\n        /**\n         * Concatenates a matrix with the current matrix, effectively combining the geometric effects of the two. In mathematical\n         * terms, concatenating two matrixes is the same as combining them using matrix multiplication.\n         * @param other The matrix to be concatenated to the source matrix.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 将某个矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。在数学术语中，将两个矩阵连接起来与使用矩阵乘法将它们结合起来是相同的。\n         * @param other 要连接到源矩阵的矩阵。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public concat(other:Matrix):void {\n            let a =  this.a * other.a;\n            let b =  0.0;\n            let c =  0.0;\n            let d =  this.d * other.d;\n            let tx = this.tx * other.a + other.tx;\n            let ty = this.ty * other.d + other.ty;\n\n            if (this.b !== 0.0 || this.c !== 0.0 || other.b !== 0.0 || other.c !== 0.0) {\n                a  += this.b * other.c;\n                d  += this.c * other.b;\n                b  += this.a * other.b + this.b * other.d;\n                c  += this.c * other.a + this.d * other.c;\n                tx += this.ty * other.c;\n                ty += this.tx * other.b;\n            }\n\n            this.a = a;\n            this.b = b;\n            this.c = c;\n            this.d = d;\n            this.tx = tx;\n            this.ty = ty;\n        }\n\n        /**\n         * Copies all of the matrix data from the source Point object into the calling Matrix object.\n         * @param other  The Matrix object from which to copy the data.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 将源 Matrix 对象中的所有矩阵数据复制到调用方 Matrix 对象中。\n         * @param other 要拷贝的目标矩阵\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public copyFrom(other:Matrix):Matrix {\n            this.a = other.a;\n            this.b = other.b;\n            this.c = other.c;\n            this.d = other.d;\n            this.tx = other.tx;\n            this.ty = other.ty;\n            return this;\n        }\n\n        /**\n         * Sets each matrix property to a value that causes a null transformation. An object transformed by applying an\n         * identity matrix will be identical to the original. After calling the identity() method, the resulting matrix\n         * has the following properties: a=1, b=0, c=0, d=1, tx=0, ty=0.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 为每个矩阵属性设置一个值，该值将导致矩阵无转换。通过应用恒等矩阵转换的对象将与原始对象完全相同。\n         * 调用 identity() 方法后，生成的矩阵具有以下属性：a=1、b=0、c=0、d=1、tx=0 和 ty=0。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public identity():void {\n            this.a = this.d = 1;\n            this.b = this.c = this.tx = this.ty = 0;\n        }\n\n        /**\n         * Performs the opposite transformation of the original matrix. You can apply an inverted matrix to an object to\n         * undo the transformation performed when applying the original matrix.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 执行原始矩阵的逆转换。\n         * 您可以将一个逆矩阵应用于对象来撤消在应用原始矩阵时执行的转换。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public invert():void {\n            this.$invertInto(this);\n        }\n\n        /**\n         * @private\n         */\n        $invertInto(target:Matrix):void {\n            let a = this.a;\n            let b  = this.b;\n            let c  = this.c;\n            let d = this.d;\n            let tx = this.tx;\n            let ty = this.ty;\n            if (b == 0 && c == 0) {\n                target.b = target.c = 0;\n                if(a==0||d==0){\n                    target.a = target.d = target.tx = target.ty = 0;\n                }\n                else{\n                    a = target.a = 1 / a;\n                    d = target.d = 1 / d;\n                    target.tx = -a * tx;\n                    target.ty = -d * ty;\n                }\n\n                return;\n            }\n            let determinant = a * d - b * c;\n            if (determinant == 0) {\n                target.identity();\n                return;\n            }\n            determinant = 1 / determinant;\n            let k = target.a =  d * determinant;\n            b = target.b = -b * determinant;\n            c = target.c = -c * determinant;\n            d = target.d =  a * determinant;\n            target.tx = -(k * tx + c * ty);\n            target.ty = -(b * tx + d * ty);\n        }\n\n        /**\n         * Applies a rotation transformation to the Matrix object.\n         * The rotate() method alters the a, b, c, and d properties of the Matrix object.\n         * @param angle The rotation angle in radians.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 对 Matrix 对象应用旋转转换。\n         * rotate() 方法将更改 Matrix 对象的 a、b、c 和 d 属性。\n         * @param angle 以弧度为单位的旋转角度。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public rotate(angle:number):void {\n            angle = +angle;\n            if (angle !== 0) {\n                angle = angle / DEG_TO_RAD;\n                let u = Math.cos(angle);\n                let v = Math.sin(angle);\n                let ta = this.a;\n                let tb = this.b;\n                let tc = this.c;\n                let td = this.d;\n                let ttx = this.tx;\n                let tty = this.ty;\n                this.a = ta  * u - tb  * v;\n                this.b = ta  * v + tb  * u;\n                this.c = tc  * u - td  * v;\n                this.d = tc  * v + td  * u;\n                this.tx = ttx * u - tty * v;\n                this.ty = ttx * v + tty * u;\n            }\n        }\n\n        /**\n         * Applies a scaling transformation to the matrix. The x axis is multiplied by sx, and the y axis it is multiplied by sy.\n         * The scale() method alters the a and d properties of the Matrix object.\n         * @param sx A multiplier used to scale the object along the x axis.\n         * @param sy A multiplier used to scale the object along the y axis.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 对矩阵应用缩放转换。x 轴乘以 sx，y 轴乘以 sy。\n         * scale() 方法将更改 Matrix 对象的 a 和 d 属性。\n         * @param sx 用于沿 x 轴缩放对象的乘数。\n         * @param sy 用于沿 y 轴缩放对象的乘数。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public scale(sx:number, sy:number):void {\n            if (sx !== 1) {\n                this.a *= sx;\n                this.c *= sx;\n                this.tx *= sx;\n            }\n            if (sy !== 1) {\n                this.b *= sy;\n                this.d *= sy;\n                this.ty *= sy;\n            }\n        }\n\n        /**\n         * Sets the members of Matrix to the specified values\n         * @param a The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\n         * @param b The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\n         * @param c The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\n         * @param d The value that affects the positioning of pixels along the y axis when scaling or rotating an image..\n         * @param tx The distance by which to translate each point along the x axis.\n         * @param ty The distance by which to translate each point along the y axis.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 将 Matrix 的成员设置为指定值\n         * @param a 缩放或旋转图像时影响像素沿 x 轴定位的值。\n         * @param b 旋转或倾斜图像时影响像素沿 y 轴定位的值。\n         * @param c 旋转或倾斜图像时影响像素沿 x 轴定位的值。\n         * @param d 缩放或旋转图像时影响像素沿 y 轴定位的值。\n         * @param tx 沿 x 轴平移每个点的距离。\n         * @param ty 沿 y 轴平移每个点的距离。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):Matrix {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n            this.d = d;\n            this.tx = tx;\n            this.ty = ty;\n            return this;\n        }\n\n        /**\n         * Returns the result of applying the geometric transformation represented by the Matrix object to the specified point.\n         * @param pointX The x coordinate for which you want to get the result of the Matrix transformation.\n         * @param pointY The y coordinate for which you want to get the result of the Matrix transformation.\n         * @param resultPoint A reusable instance of Point for saving the results. Passing this parameter can reduce the\n         * number of reallocate objects, which allows you to get better code execution performance.\n         * @returns The point resulting from applying the Matrix transformation.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n\n        /**\n         * Translates the matrix along the x and y axes, as specified by the dx and dy parameters.\n         * @param dx The amount of movement along the x axis to the right, in pixels.\n         * @param dy The amount of movement down along the y axis, in pixels.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 沿 x 和 y 轴平移矩阵，由 dx 和 dy 参数指定。\n         * @param dx 沿 x 轴向右移动的量（以像素为单位）。\n         * @param dy 沿 y 轴向下移动的量（以像素为单位）。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public translate(dx:number, dy:number):void {\n            this.tx += dx;\n            this.ty += dy;\n        }\n\n        /**\n         * Determines whether two matrixes are equal.\n         * @param other The matrix to be compared.\n         * @returns A value of true if the object is equal to this Matrix object; false if it is not equal.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 是否与另一个矩阵数据相等\n         * @param other 要比较的另一个矩阵对象。\n         * @returns 是否相等，ture表示相等。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public equals(other:Matrix):boolean {\n            return this.a == other.a && this.b == other.b &&\n                this.c == other.c && this.d == other.d &&\n                this.tx == other.tx && this.ty == other.ty;\n        }\n\n        /**\n         * prepend matrix\n         * @param a The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\n         * @param b The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\n         * @param c The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\n         * @param d The value that affects the positioning of pixels along the y axis when scaling or rotating an image..\n         * @param tx The distance by which to translate each point along the x axis.\n         * @param ty The distance by which to translate each point along the y axis.\n         * @returns matrix\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 前置矩阵\n         * @param a 缩放或旋转图像时影响像素沿 x 轴定位的值\n         * @param b 缩放或旋转图像时影响像素沿 y 轴定位的值\n         * @param c 缩放或旋转图像时影响像素沿 x 轴定位的值\n         * @param d 缩放或旋转图像时影响像素沿 y 轴定位的值\n         * @param tx 沿 x 轴平移每个点的距离\n         * @param ty 沿 y 轴平移每个点的距离\n         * @returns 矩阵自身\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public prepend(a:number, b:number, c:number, d:number, tx:number, ty:number):Matrix {\n            let tx1 = this.tx;\n            if (a != 1 || b != 0 || c != 0 || d != 1) {\n                let a1 = this.a;\n                let c1 = this.c;\n                this.a = a1 * a + this.b * c;\n                this.b = a1 * b + this.b * d;\n                this.c = c1 * a + this.d * c;\n                this.d = c1 * b + this.d * d;\n            }\n            this.tx = tx1 * a + this.ty * c + tx;\n            this.ty = tx1 * b + this.ty * d + ty;\n            return this;\n        }\n\n        /**\n         * append matrix\n         * @param a The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\n         * @param b The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\n         * @param c The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\n         * @param d The value that affects the positioning of pixels along the y axis when scaling or rotating an image..\n         * @param tx The distance by which to translate each point along the x axis.\n         * @param ty The distance by which to translate each point along the y axis.\n         * @returns matrix\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 后置矩阵\n         * @param a 缩放或旋转图像时影响像素沿 x 轴定位的值\n         * @param b 缩放或旋转图像时影响像素沿 y 轴定位的值\n         * @param c 缩放或旋转图像时影响像素沿 x 轴定位的值\n         * @param d 缩放或旋转图像时影响像素沿 y 轴定位的值\n         * @param tx 沿 x 轴平移每个点的距离\n         * @param ty 沿 y 轴平移每个点的距离\n         * @returns 矩阵自身\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public append(a:number, b:number, c:number, d:number, tx:number, ty:number):Matrix {\n            let a1 = this.a;\n            let b1 = this.b;\n            let c1 = this.c;\n            let d1 = this.d;\n            if (a != 1 || b != 0 || c != 0 || d != 1) {\n                this.a = a * a1 + b * c1;\n                this.b = a * b1 + b * d1;\n                this.c = c * a1 + d * c1;\n                this.d = c * b1 + d * d1;\n            }\n            this.tx = tx * a1 + ty * c1 + this.tx;\n            this.ty = tx * b1 + ty * d1 + this.ty;\n            return this;\n        }\n\n        /**\n         * Given a point in the pretransform coordinate space, returns the coordinates of that point after the transformation occurs.\n         * Unlike the standard transformation applied using the transformPoint() method, the deltaTransformPoint() method's transformation does not consider the translation parameters tx and ty.\n         * @param point The point for which you want to get the result of the matrix transformation.\n         * @returns The point resulting from applying the matrix transformation.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n\n        /**\n         * Returns a text value listing the properties of the Matrix object.\n         * @returns A string containing the values of the properties of the Matrix object: a, b, c, d, tx, and ty.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n        /**\n         * 返回将 Matrix 对象表示的几何转换应用于指定点所产生的结果。\n         * @returns 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public toString():string {\n            return \"(a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n        }\n\n        /**\n         * Includes parameters for scaling, rotation, and translation. When applied to a matrix it sets the matrix's values based on those parameters.\n         * @param scaleX The factor by which to scale horizontally.\n         * @param scaleY The factor by which scale vertically.\n         * @param rotation The amount to rotate, in radians.\n         * @param tx The number of pixels to translate (move) to the right along the x axis.\n         * @param ty The number of pixels to translate (move) down along the y axis.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n\n        /**\n         * Creates the specific style of matrix expected by the beginGradientFill() and lineGradientStyle() methods of the Graphics class.\n         * Width and height are scaled to a scaleX/scaleY pair and the tx/ty values are offset by half the width and height.\n         * @param width The width of the gradient box.\n         * @param height The height of the gradient box.\n         * @param rotation The amount to rotate, in radians.\n         * @param tx The distance, in pixels, to translate to the right along the x axis. This value is offset by half of the width parameter.\n         * @param ty The distance, in pixels, to translate down along the y axis. This value is offset by half of the height parameter.\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language en_US\n         */\n\n\n        /**\n         * @private\n         */\n        private getDeterminant() {\n            return this.a * this.d - this.b * this.c;\n        }\n\n        /**\n         * @private\n         */\n        $getScaleX():number {\n            let m = this;\n            if (m.a == 1 && m.b == 0) {\n                return 1;\n            }\n            let result = Math.sqrt(m.a * m.a + m.b * m.b);\n            return this.getDeterminant() < 0 ? -result : result;\n        }\n\n        /**\n         * @private\n         */\n        $getScaleY():number {\n            let m = this;\n            if (m.c == 0 && m.d == 1) {\n                return 1;\n            }\n            let result = Math.sqrt(m.c * m.c + m.d * m.d);\n            return this.getDeterminant() < 0 ? -result : result;\n        }\n\n        /**\n         * @private\n         */\n        $getSkewX():number {\n            return Math.atan2(this.d, this.c) - (PI / 2);\n        }\n\n        /**\n         * @private\n         */\n        $getSkewY():number {\n            return Math.atan2(this.b, this.a);\n        }\n    }\n    /**\n     * @private\n     * 仅供框架内复用，要防止暴露引用到外部。\n     */\n    export let $TempMatrix = new Matrix();\n}","module Vejay.utils.math {\n    let pointPool: Point[] = [];\n    let DEG_TO_RAD: number = Math.PI / 180;\n\n    /**\n     * Point 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\n     */\n    export class Point {\n        public static release(point: Point): void {\n            if (!point) {\n                return;\n            }\n            pointPool.push(point);\n        }\n\n        /**\n         * 从对象池中取出或创建一个新的Point对象。\n         * @param x 该对象的x属性值，默认为0\n         * @param y 该对象的y属性值，默认为0\n         */\n        public static create(x: number, y: number): Point {\n            let point = pointPool.pop();\n            if (!point) {\n                point = new Point();\n            }\n            return point.setTo(x, y);\n        }\n\n        /**\n         * 创建一个 egret.Point 对象.若不传入任何参数，将会创建一个位于（0，0）位置的点。\n         * @param x 该对象的x属性值，默认为0\n         * @param y 该对象的y属性值，默认为0\n         */\n        public constructor(x: number = 0, y: number = 0) {\n            this.x = x;\n            this.y = y;\n        }\n\n        /**\n         * 该点的水平坐标。\n         * @default 0\n         */\n        public x: number;\n\n        /**\n         * 该点的垂直坐标。\n         * @default 0\n         */\n        public y: number;\n\n        /**\n         * 从 (0,0) 到此点的线段长度。\n         */\n        public get length(): number {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        }\n\n        /**\n         * 将 Point 的成员设置为指定值\n         * @param x 该对象的x属性值\n         * @param y 该对象的y属性值\n         */\n        public setTo(x: number, y: number): Point {\n            this.x = x;\n            this.y = y;\n            return this;\n        }\n\n        /**\n         * 克隆点对象\n         */\n        public clone(): Point {\n            return new Point(this.x, this.y);\n        }\n\n        /**\n         * 确定两个点是否相同。如果两个点具有相同的 x 和 y 值，则它们是相同的点。\n         * @param toCompare 要比较的点。\n         * @returns 如果该对象与此 Point 对象相同，则为 true 值，如果不相同，则为 false。\n         */\n        public equals(toCompare: Point): boolean {\n            return this.x == toCompare.x && this.y == toCompare.y;\n        }\n\n        /**\n         * 返回 pt1 和 pt2 之间的距离。\n         * @param p1 第一个点\n         * @param p2 第二个点\n         * @returns 第一个点和第二个点之间的距离。\n         */\n        public static distance(p1: Point, p2: Point): number {\n            return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));\n        }\n\n        /**\n         * 将源 Point 对象中的所有点数据复制到调用方 Point 对象中。\n         * @param sourcePoint 要从中复制数据的 Point 对象。\n         */\n        public copyFrom(sourcePoint: Point): void {\n            this.x = sourcePoint.x;\n            this.y = sourcePoint.y;\n        }\n\n        /**\n         * 将另一个点的坐标添加到此点的坐标以创建一个新点。\n         * @param v 要添加的点。\n         * @returns 新点。\n         */\n        public add(v: Point): Point {\n            return new Point(this.x + v.x, this.y + v.y);\n        }\n\n        /**\n         * 确定两个指定点之间的点。\n         * 参数 f 确定新的内插点相对于参数 pt1 和 pt2 指定的两个端点所处的位置。参数 f 的值越接近 1.0，则内插点就越接近第一个点（参数 pt1）。参数 f 的值越接近 0，则内插点就越接近第二个点（参数 pt2）。\n         * @param pt1 第一个点。\n         * @param pt2 第二个点。\n         * @param f 两个点之间的内插级别。表示新点将位于 pt1 和 pt2 连成的直线上的什么位置。如果 f=1，则返回 pt1；如果 f=0，则返回 pt2。\n         */\n        public static interpolate(pt1: Point, pt2: Point, f: number): Point {\n            let f1: number = 1 - f;\n            return new Point(pt1.x * f + pt2.x * f1, pt1.y * f + pt2.y * f1);\n        }\n\n        /**\n         * 将 (0,0) 和当前点之间的线段缩放为设定的长度。\n         * @param thickness 缩放值。例如，如果当前点为 (0,5) 并且您将它规范化为 1，则返回的点位于 (0,1) 处。\n         */\n        public normalize(thickness: number): void {\n            if (this.x != 0 || this.y != 0) {\n                let relativeThickness: number = thickness / this.length;\n                this.x *= relativeThickness;\n                this.y *= relativeThickness;\n            }\n        }\n\n        /**\n         * 按指定量偏移 Point 对象。dx 的值将添加到 x 的原始值中以创建新的 x 值。dy 的值将添加到 y 的原始值中以创建新的 y 值。\n         * @param dx 水平坐标 x 的偏移量。\n         * @param dy 水平坐标 y 的偏移量。\n         */\n        public offset(dx: number, dy: number): void {\n            this.x += dx;\n            this.y += dy;\n        }\n\n        /**\n         * 将一对极坐标转换为笛卡尔点坐标。\n         * @param len 极坐标对的长度。\n         * @param angle 极坐标对的角度（以弧度表示）。\n         */\n        public static polar(len: number, angle: number): Point {\n            return new Point(len * Math.cos(angle / DEG_TO_RAD), len * Math.sin(angle / DEG_TO_RAD));\n        }\n\n        /**\n         * 从此点的坐标中减去另一个点的坐标以创建一个新点。\n         * @param v 要减去的点。\n         * @returns 新点。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public subtract(v: Point): Point {\n            return new Point(this.x - v.x, this.y - v.y);\n        }\n\n        /**\n         * 返回包含 x 和 y 坐标的值的字符串。该字符串的格式为 \"(x=x, y=y)\"，因此为点 23,17 调用 toString() 方法将返回 \"(x=23, y=17)\"。\n         * @returns 坐标的字符串表示形式。\n         * @version Egret 2.4\n         * @platform Web,Native\n         * @language zh_CN\n         */\n        public toString(): string {\n            return \"(x=\" + this.x + \", y=\" + this.y + \")\";\n        }\n    }\n\n    /**\n     * @private\n     * 仅供框架内复用，要防止暴露引用到外部。\n     */\n    export let $TempPoint = new Point();\n}","/**\r\n * Created by cjb on 2018-05-05\r\n */\r\nmodule Vejay.process {\r\n    export class MsgEvent {\r\n        private static _eventList = {};\r\n        \r\n        public static clear(): void {\r\n            MsgEvent._eventList = {};\r\n        }\r\n        \r\n        public static addEvent(event: string, param: any = null): void {\r\n            MsgEvent._eventList[event] = param;\r\n        }\r\n        \r\n        public static addEventList(event: string, param: any): void {\r\n            var list: Array<any> = MsgEvent._eventList[event] === undefined ? [] : MsgEvent._eventList[event];\r\n            if (list.indexOf(param) === -1) list.push(param);\r\n            MsgEvent._eventList[event] = list;\r\n            if (list.length > 300) console.error('事件没删除   ' + event);\r\n        }\r\n        \r\n        public static spliceEvent(event: string, guid: string): void {\r\n            var list: Array<any> = MsgEvent._eventList[event];\r\n            if (list == null) return;\r\n            var index = list.indexOf(guid);\r\n            if (index != -1) list.splice(index, 1);\r\n            \r\n            if (list.length == 0) MsgEvent.removeEvent(event);\r\n        }\r\n        \r\n        public static hasEvent(type: string): Boolean {\r\n            return type in MsgEvent._eventList;\r\n        }\r\n        \r\n        public static removeEvent(type: string): void {\r\n            delete MsgEvent._eventList[type];\r\n        }\r\n        \r\n        public static getParam(type: string): any {\r\n            return MsgEvent._eventList[type];\r\n        }\r\n        \r\n        public static get eventList(): any {\r\n            return MsgEvent._eventList;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Created by cjb on 2018-05-05\r\n */\r\n\r\n\r\nmodule Vejay.process {\r\n    import MsgEvent = Vejay.process.MsgEvent;\r\n    \r\n    export class Process {\r\n        private _event: string;\r\n        \r\n        constructor(event: string) {\r\n            this._event = event;\r\n        }\r\n        \r\n        public get isRun(): Boolean {\r\n            return MsgEvent.hasEvent(this._event);\r\n        }\r\n        \r\n        public process(): void {\r\n        }\r\n        \r\n        public complete(): void {\r\n            MsgEvent.removeEvent(this._event);\r\n        }\r\n        \r\n        public get getParam(): Object {\r\n            return MsgEvent.getParam(this._event);\r\n        }\r\n        \r\n        public get getList(): Array<any> {\r\n            return MsgEvent.getParam(this._event) as Array<any>;\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n * Created by cjb on 2018-04-29\r\n */\r\nmodule Vejay.global {\r\n    export class GlobalData {\r\n        public static ScreenWidth: number;\r\n        public static ScreenHeight: number;\r\n        public static StageWidth: number;\r\n        public static StageHeight: number;\r\n        \r\n        public static TouchNum: number = 2; // 支持多点触控数量\r\n        \r\n        public static WebGl: WebGLRenderingContext;\r\n        public static Ctx2d: CanvasRenderingContext2D;\r\n        public static CtxType: number = 0; // 0:webGL 1:canvas\r\n    }\r\n}","/**\n * Created by cjb on 2018-05-01\n */\n\n\nmodule Vejay.core.base {\n    import Dictionary = Vejay.utils.Dictionary;\n    \n    export class EventDispatcher {\n        /** key:事件名称 , value: [执行域, 方法, 参数, 是否只执行一次] */\n        private static _list: Dictionary = new Dictionary();\n        \n        /**\n         * 添加事件监听\n         * @param {string} name 事件名称\n         * @param caller 执行域\n         * @param {Function} method 方法\n         * @param {Array<any>} args [参数]\n         * @param {boolean} once 是否只执行一次\n         */\n        public on(name: string, caller: any, method: Function, args: Array<any> = null, once: boolean = false): void {\n            var events: any = EventDispatcher._list.get(name);\n            var e;\n            \n            if (!events) {\n                events = [];\n                EventDispatcher._list.set(name, events);\n            }\n            for (var i = 0; i < events.length; i++) {\n                e = events[i];\n                if (caller === e[0] && method === e[1]) {\n                    e = [caller, method, args, once, this];\n                    return;\n                }\n            }\n            // 监听鼠标事件自动打开鼠标监听\n            if (this instanceof display.Sprite && Vejay.event.Event.isMouseEvent(name)) {\n                this.mouseEnable = true;\n            }\n            events.push([caller, method, args, once, this]);\n        }\n        \n        /** 删除事件监听 */\n        public off(name: string, caller: any, method: Function): void {\n            var events: Array<any> = EventDispatcher._list.get(name);\n            var e;\n            \n            for (var i = 0; i < events.length; i++) {\n                e = events[i];\n                if (caller === e[0] && method === e[1]) {\n                    events.splice(i, 1);\n                    // 自动关闭鼠标监听\n                    if (caller instanceof display.Sprite && Vejay.event.Event.isMouseEvent(name)) {\n                        caller.mouseEnable = false;\n                    }\n                    return;\n                }\n            }\n        }\n        \n        /** 删除事件全部监听 */\n        public offAll(name: string): void {\n            EventDispatcher._list.remove(name);\n        }\n        \n        /** 发送 */\n        public sendEvent(name: string, data: any): void {\n            SingletonFactory.getInstance(Vejay.event.EventProcess).addEvent(name, data);\n        }\n        \n        /**\n         * 执行事件\n         * @param {string} name 事件名称\n         * @param event 事件\n         * @param {display.DisplayObject} target 指定对象\n         */\n        public static dispatch(name: string, event: Vejay.event.Event, target: Vejay.display.DisplayObject = null) {\n            var events: Array<any> = this._list.get(name);\n            if (!events) {\n                return;\n            }\n            var e: Array<any>;\n            var caller: any;\n            var method: Function;\n            var args: Array<any>;\n            \n            for (var i = 0; i < events.length; i++) {\n                e = events[i];\n                caller = e[0];\n                \n                if (!target || e[4] === target) {\n                    method = e[1];\n                    \n                    if (args instanceof Array) {\n                        args = e[2].slice(0);\n                        args.unshift(event);\n                    } else if (event instanceof Vejay.event.Event) {\n                        args = [event];\n                    }\n                    method.apply(caller, args);\n                    \n                    if (e[3]) {\n                        events.splice(i--, 1);\n                    }\n                }\n            }\n        }\n        \n    }\n}\n","/**\n * Created by cjb on 2018/5/3\n */\n\nmodule Vejay.core.base {\n    export class SingletonFactory {\n        private static _factory: Array<any> = [];\n        \n        public static getInstance<T>(clazz: { new (): T }): T {\n            var inst: T;\n            for (var i = 0; i < this._factory.length; i++) {\n                inst = this._factory[i];\n                if (inst.constructor === clazz) {\n                    return inst;\n                }\n            }\n            inst = new clazz();\n            this._factory.push(inst);\n            return inst;\n        }\n    }\n}\n","/**\n * Created by cjb on 2018-05-01\n */\n\nmodule Vejay.core {\n    import GlobalData = Vejay.global.GlobalData;\n    \n    export class Font {\n    \n        \n    }\n    \n    export class FontCanvas extends Font {\n        public setFont(str: string) {\n            var ctx = GlobalData.Ctx2d;\n            ctx.font = str;\n            ctx.save();\n        }\n    }\n    \n    export class FontWebGL extends Font {\n    \n    }\n}\n","module Vejay.display {\r\n    \r\n    import Rectangle = Vejay.utils.math.Rectangle;\r\n    import EventDispatcher = Vejay.core.base.EventDispatcher;\r\n    \r\n    export class DisplayObject extends EventDispatcher {\r\n        \r\n        private _x: number = 0;\r\n        private _y: number = 0;\r\n        public posChange: boolean;\r\n        public width: number = 0;\r\n        public height: number = 0;\r\n        private _scaleX: number = 1;\r\n        private _scaleY: number = 1;\r\n        public scaleChange: boolean;\r\n        public pivotX: number = 0;\r\n        public pivotY: number = 0;\r\n        private _rotation: number = 0;\r\n        public rotationChange: boolean = false;\r\n        \r\n        public parent: DisplayObjectContainer;\r\n        public visible: boolean = true;\r\n        \r\n        protected _viewport: Rectangle = new Rectangle();\r\n        \r\n        constructor() {\r\n            super();\r\n        }\r\n        \r\n        // get globalX(): number {\r\n        //     return this._viewport.x;\r\n        // }\r\n        //\r\n        // get globalY(): number {\r\n        //     return this._viewport.y;\r\n        // }\r\n        \r\n        get x(): number {\r\n            return this._x;\r\n        }\r\n        \r\n        set x(value: number) {\r\n            if (this._x === value) {\r\n                return;\r\n            }\r\n            this._x = value;\r\n            this.posChange = true;\r\n        }\r\n        \r\n        get y(): number {\r\n            return this._y;\r\n        }\r\n        \r\n        set y(value: number) {\r\n            if (this._y === value) {\r\n                return;\r\n            }\r\n            this._y = value;\r\n            this.posChange = true;\r\n        }\r\n        \r\n        public pos(x: number, y: number): void {\r\n            if (this._x === x && this._y === y) {\r\n                return;\r\n            }\r\n            this._x = x;\r\n            this._y = y;\r\n            this.posChange = true;\r\n        }\r\n        \r\n        get scaleY(): number {\r\n            return this._scaleY;\r\n        }\r\n        \r\n        set scaleY(value: number) {\r\n            if (this._scaleY === value) {\r\n                return;\r\n            }\r\n            this._scaleY = value;\r\n            this.scaleChange = true;\r\n        }\r\n        \r\n        get scaleX(): number {\r\n            return this._scaleX;\r\n        }\r\n        \r\n        set scaleX(value: number) {\r\n            if (this._scaleX === value) {\r\n                return;\r\n            }\r\n            this._scaleX = value;\r\n            this.scaleChange = true;\r\n        }\r\n        \r\n        public scale(scaleX: number, scaleY: number): void {\r\n            if (this._scaleX === scaleX && this._scaleY === scaleY) {\r\n                return;\r\n            }\r\n            this._scaleX = scaleX;\r\n            this._scaleY = scaleY;\r\n            this.scaleChange = true;\r\n        }\r\n        \r\n        get rotation(): number {\r\n            return this._rotation;\r\n        }\r\n        \r\n        set rotation(value: number) {\r\n            if (this._rotation === value) {\r\n                return;\r\n            }\r\n            this._rotation = value;\r\n            this.rotationChange = true;\r\n        }\r\n        \r\n        get viewport(): utils.math.Rectangle {\r\n            return this._viewport;\r\n        }\r\n        \r\n        public render(parentX, parentY) {\r\n        \r\n        }\r\n    \r\n        public get asImage(): Vejay.display.component.Image {\r\n            return (this instanceof Vejay.display.component.Image) ? <Vejay.display.component.Image><any>this : null;\r\n        }\r\n    \r\n        public get asSprite(): Vejay.display.Sprite {\r\n            return (this instanceof Vejay.display.Sprite) ? <Vejay.display.Sprite><any>this : null;\r\n        }\r\n        \r\n    }\r\n}\r\n","module Vejay.display {\r\n    \r\n    import GlobalData = Vejay.global.GlobalData;\r\n    \r\n    export class DisplayObjectContainer extends DisplayObject {\r\n        private _children: Array<DisplayObject> = [];\r\n        \r\n        constructor() {\r\n            super();\r\n        }\r\n        \r\n        public get numChildren(): number {\r\n            return this._children.length;\r\n        }\r\n        \r\n        public get children(): Array<DisplayObject> {\r\n            return this._children;\r\n        }\r\n        \r\n        public addChild(child: DisplayObject) {\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        \r\n        public removeChild(child: DisplayObject): void {\r\n            var index = this.parent.getIndex(child);\r\n            this.parent.removeChildAt(index);\r\n        }\r\n        \r\n        public removeChildAt(index: number): DisplayObject {\r\n            if (index >= 0 && index < this._children.length) {\r\n                var child: DisplayObject = this._children[index];\r\n                child.parent = null;\r\n                //index = this._children.indexOf(child); // index might have changed by event handler\r\n                //if (index >= 0)\r\n                this._children.splice(index, 1);\r\n                // if (dispose) child.dispose();\r\n                return child;\r\n            } else {\r\n                throw new RangeError('Invalid child index');\r\n            }\r\n        }\r\n        \r\n        public getIndex(child: DisplayObject): number {\r\n            return this._children.indexOf(child);\r\n        }\r\n        \r\n        public getChild(index: number): DisplayObject {\r\n            return this._children[index];\r\n        }\r\n        \r\n        public removeAll() {\r\n            this._children.length = 0;\r\n        }\r\n        \r\n        public removeSelf(): void {\r\n            this.parent.removeChild(this);\r\n        }\r\n        \r\n        protected renderSelf(): void {\r\n        }\r\n        \r\n        public render(parentX, parentY) {\r\n            if (!this.visible) {\r\n                return;\r\n            }\r\n            var sWidth: number = this.width * Math.abs(this.scaleX);\r\n            var sHeight: number = this.height * Math.abs(this.scaleY);\r\n            var sX: number = parentX + this.x - this.pivotX * sWidth;\r\n            var sY: number = parentY + this.y - this.pivotY * sHeight;\r\n            \r\n            if (this.scaleX < 0) {\r\n                sX += sWidth;\r\n            }\r\n            if (this.scaleY < 0) {\r\n                sY += sHeight;\r\n            }\r\n            this._viewport.setTo(sX, sY, sWidth, sHeight);\r\n            \r\n            var parentViewport = this.parent ? this.parent.viewport : Stage.viewport;\r\n            if (!parentViewport.isIntersectRect(this._viewport)) {\r\n                return;\r\n            }\r\n            // 渲染自身\r\n            var ctx = GlobalData.Ctx2d;\r\n            this.setRotation(ctx, parentX + this.x, parentY + this.y);\r\n            this.renderSelf();\r\n            ctx.restore();\r\n            // 渲染子对象\r\n            let len = this.children.length;\r\n            for (let index = 0; index < len; index++) {\r\n                var element: DisplayObject = this.children[index];\r\n                element.render(this.x + parentX, this.y + parentY);\r\n            }\r\n        }\r\n        \r\n        private setRotation(ctx, x, y) {\r\n            if (this.rotationChange) {\r\n                var px: number = x * 0.5;\r\n                var py: number = y * 0.5;\r\n                var diffX: number = px - px * Math.cos(this.rotation + 45);\r\n                var diffY: number = py - py * Math.sin(this.rotation + 45);\r\n                \r\n                ctx.translate(diffX, diffY);\r\n                ctx.rotate(this.rotation);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\n * Created by cjb on 2018/5/4\n */\nmodule Vejay.display {\n    export class Sprite extends DisplayObjectContainer {\n        private _mouseEnable: boolean;\n        public mouseThrough: boolean;\n        \n        constructor() {\n            super();\n            this._mouseEnable = false; // 默认关闭鼠标监听\n            this.mouseThrough = true; // 默认打开鼠标穿透\n        }\n        \n        get mouseEnable(): boolean {\n            return this._mouseEnable;\n        }\n        \n        set mouseEnable(value: boolean) {\n            this._mouseEnable = value;\n            if (value && this.parent) {\n                (this.parent as Sprite).mouseEnable = true;\n            }\n        }\n    }\n}\n","/**\n * Created by cjb on 2018/5/4\n */\nmodule Vejay.display.component {\n    export class Component extends Sprite {\n        constructor() {\n            super();\n            this.mouseThrough = false;\n        }\n    }\n}\n","module Vejay.display {\r\n    \r\n    import Rectangle = Vejay.utils.math.Rectangle;\r\n    import GlobalData = Vejay.global.GlobalData;\r\n    \r\n    export class Stage extends Sprite {\r\n        public static viewport: Rectangle;\r\n        public _bgColor: string;\r\n        \r\n        constructor() {\r\n            super();\r\n            \r\n            this.x = (GlobalData.ScreenWidth - GlobalData.StageWidth) * 0.5;\r\n            this.y = (GlobalData.ScreenHeight - GlobalData.StageHeight) * 0.5;\r\n            this.width = GlobalData.StageWidth;\r\n            this.height = GlobalData.StageHeight;\r\n            Stage.viewport = new Rectangle(this.x, this.y, this.width, this.height);\r\n        }\r\n        \r\n        public set bgColor(color: string) {\r\n            this._bgColor = color;\r\n            var ctx = GlobalData.Ctx2d;\r\n            ctx.fillStyle = color;\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n        }\r\n        \r\n        renderSelf() {\r\n            var ctx = GlobalData.Ctx2d;\r\n            if (this._bgColor) {\r\n                ctx.fillStyle = this._bgColor;\r\n                ctx.fillRect(0, 0, this.width, this.height);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\n * Created by cjb on 2018-05-01\n */\n\n\nmodule Vejay.display.component {\n    import GlobalData = Vejay.global.GlobalData;\n    \n    export class Image extends Component {\n        private _img: HTMLImageElement;\n        \n        constructor(imgSrc: string) {\n            super();\n            this._img = wx.createImage();\n            this._img.src = imgSrc;\n            this._img.onload = this.onLoad;\n            this._img.onerror = this.onError;\n        }\n        \n        public skin(src: string) {\n        \n        }\n        \n        private onLoad(): void {\n            this.width = this.width === undefined ? this._img.width : this.width;\n            this.height = this.height === undefined ? this._img.height : this.height;\n        }\n        \n        private onError(): void {\n        \n        }\n        \n        protected renderSelf() {\n            var viewport = this._viewport;\n            var parentViewport = this.parent.viewport;\n            \n            if (parentViewport.containsRect(viewport)) {\n                this.drawImage(0, 0, viewport.width, viewport.height, viewport.x, viewport.y, viewport.width, viewport.height);\n                return;\n            }\n            let sx: number, sy: number, sWidth: number, sHeight: number;\n            let dx: number, dy: number, dWidth: number, dHeight: number;\n            if (viewport.left < parentViewport.left) {\n                sx = parentViewport.left - viewport.left;\n                dx = parentViewport.left;\n                sWidth = dWidth = viewport.right - parentViewport.left;\n            } else {\n                sx = 0;\n                dx = viewport.x;\n                sWidth = dWidth = viewport.width;\n            }\n            if (viewport.top < parentViewport.top) {\n                sy = parentViewport.top - viewport.top;\n                dy = parentViewport.top;\n                sHeight = dHeight = viewport.bottom - parentViewport.top;\n            } else {\n                sy = 0;\n                dy = viewport.y;\n                sHeight = dHeight = viewport.height;\n            }\n            if (viewport.right > parentViewport.right) {\n                sWidth = dWidth = parentViewport.right - viewport.left;\n            }\n            if (viewport.bottom > parentViewport.bottom) {\n                sHeight = dHeight = parentViewport.bottom - viewport.top;\n            }\n            this.drawImage(sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n        }\n        \n        private drawImage(sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n            var ctx = GlobalData.Ctx2d;\n            \n            // if (this.scaleChange && (this.scaleX !== 1 || this.scaleY !== 1)) {\n            //     ctx.translate(0, dHeight + Stage.viewport.y * 2);\n            //     ctx.scale(this.scaleX, this.scaleY);\n            //     ctx.drawImage(this._img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n            //     ctx.setTransform(1, 0, 0, 1, 0, 0);\n            //     return;\n            // }\n            ctx.drawImage(this._img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n        }\n    }\n}\n","/**\n * Created by cjb on 2018-04-30\n */\nimport SingletonFactory = Vejay.core.base.SingletonFactory;\n\nvar loader;\n\nmodule Vejay {\n    import GlobalData = Vejay.global.GlobalData;\n    import Process = Vejay.process.Process;\n    \n    export var stage: Vejay.display.Stage;\n    \n    export function init(stageW: number, stageH: number, ScreenW?: number, ScreenH?: number) {\n        GlobalData.StageWidth = stageW;\n        GlobalData.StageHeight = stageH;\n        GlobalData.ScreenWidth = ScreenW ? ScreenW : stageW;\n        GlobalData.ScreenHeight = ScreenH ? ScreenH : stageH;\n        \n        Vejay.Init.initContextRender();\n        stage = SingletonFactory.getInstance(display.Stage);\n        \n        Vejay.Init.initProcess();\n        Vejay.Init.loop();\n    }\n    \n    export class Init {\n        private static _processes: Array<Process> = [];\n        \n        public static initProcess(): void {\n            this._processes.push(new Vejay.event.EventProcess()); // 传送\n            this._processes.push(new Vejay.display.DisplayProcess());\n        }\n        \n        public static initContextRender(): void {\n            // var webgl = wx.createCanvas().getContext(\"webgl\");\n            // var ctx = wx.createCanvas().getContext(\"2d\");\n            var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n            GlobalData.Ctx2d = ctx;\n            GlobalData.CtxType = 1;\n            \n            // if (webgl) {\n            //     GlobalData.WebGl = webgl;\n            // } else {\n            //     GlobalData.Ctx2d = ctx;\n            //     GlobalData.CtxType = 1;\n            // }\n        }\n        \n        private static process(): void {\n            let len = this._processes.length;\n            for (let i = 0; i < len; i++) {\n                let p: Process = this._processes[i];\n                if (!p.isRun) continue;\n                p.process();\n                p.complete();\n            }\n        }\n        \n        public static loop(): void {\n            this.process();\n            \n            requestAnimationFrame(this.loop.bind(this));\n        }\n    }\n}\n","/**\r\n * Created by cjb on 2018-04-30\r\n */\r\nmodule Vejay.core {\r\n    export class Vo {\r\n        \r\n        public static copy(from: Vo, to: Vo): Vo {\r\n            for (var propName in from) {\r\n                to[propName] = from[propName];\r\n            }\r\n            return to;\r\n        }\r\n        \r\n        public clone(): Vo {\r\n            return Vo.copy(this, new Vo());\r\n        }\r\n        \r\n    }\r\n}\r\n","/**\n * Created by cjb on 2018/5/4\n */\n\nmodule Vejay.event {\n    import Sprite = Vejay.display.Sprite;\n    \n    export class Event {\n        //public static readonly TYPE_TOUCH: string = \"touch\";\n        \n        public static MOUSE_EVENT: Array<string> = [\"v_mouse_click\", \"v_mouse_down\", \"v_mouse_up\", \"v_mouse_move\",\"v_mouse_out\"];\n        public static readonly MOUSE_CLICK: string = Event.MOUSE_EVENT[0];\n        public static readonly MOUSE_DOWN: string = Event.MOUSE_EVENT[1];\n        public static readonly MOUSE_UP: string = Event.MOUSE_EVENT[2];\n        public static readonly MOUSE_MOVE: string = Event.MOUSE_EVENT[3];\n        public static readonly MOUSE_OUT: string = Event.MOUSE_EVENT[4];\n        \n        public target: Sprite;\n        public currentTarget: Sprite;\n        // public type: string;\n        public touch: Touch;\n        \n        constructor(touch: Touch, currentTarget?: Sprite, target?: Sprite) {\n            this.touch = touch;\n            if (currentTarget) {\n                this.currentTarget = currentTarget;\n            }\n            if (target) {\n                this.target = target;\n            }\n        }\n        \n        public static isMouseEvent(name: string): boolean {\n            if (this.MOUSE_EVENT.indexOf(name) > -1) {\n                return true;\n            }\n            return false;\n        }\n    }\n}\n","/**\n * Created by cjb on 2018/5/4\n */\n\nmodule Vejay.event {\n    import Dictionary = Vejay.utils.Dictionary;\n    import Sprite = Vejay.display.Sprite;\n    \n    export class EventModel {\n        private _targets: Dictionary;\n        \n        constructor() {\n            this._targets = new Dictionary();\n        }\n        \n        public addTarget(touch: Touch, target: Array<Sprite>): void {\n            this._targets.set(touch.identifier.toString(), [touch, target]);\n        }\n        \n        public getAndRemove(touchId: number | string): [Touch, Array<Sprite>] {\n            var target = this._targets.get(touchId.toString());\n            if (target) {\n                this._targets.remove(touchId.toString());\n            }\n            return target;\n        }\n        \n        public get(touchId: number | string): [Touch, Array<Sprite>] {\n            return this._targets.get(touchId.toString());\n        }\n        \n        public get targets(): Dictionary {\n            return this._targets;\n        }\n    }\n}\n","/**\n * Created by cjb on 2018/5/3\n */\n\nmodule Vejay.event {\n    import EventDispatcher = Vejay.core.base.EventDispatcher;\n    import Process = Vejay.process.Process;\n    \n    export class EventProcess extends Process implements IProcess {\n        private _msg: Array<any>;\n        \n        constructor() {\n            super(\"EventProcess\");\n            this._msg = [];\n            SingletonFactory.getInstance(Vejay.event.MouseEvent).init();\n        }\n        \n        public get isRun(): Boolean {\n            return true;\n        }\n        \n        public complete(): void {\n        }\n        \n        public addEvent(name: string, e: Event) {\n            this._msg.push([name, e]);\n        }\n        \n        public clear(): void {\n            this._msg.length = 0;\n        }\n        \n        public process(): void {\n            var event: Array<any>;\n            while (this._msg.length > 0) {\n                event = this._msg.shift();\n                EventDispatcher.dispatch(event[0], event[1]);\n            }\n        }\n    }\n}\n","/**\n * Created by cjb on 2018/5/4\n */\n\nmodule Vejay.event {\n    import Sprite = Vejay.display.Sprite;\n    import EventDispatcher = Vejay.core.base.EventDispatcher;\n    import GlobalData = Vejay.global.GlobalData;\n    \n    export class MouseEvent {\n        private _model: EventModel;\n        private _stage: display.Stage;\n        \n        constructor() {\n            this._stage = SingletonFactory.getInstance(display.Stage);\n            this._model = SingletonFactory.getInstance(event.EventModel);\n        }\n        \n        public init(): void {\n            wx.onTouchStart(this.onTouchStart.bind(this));\n            wx.onTouchMove(this.onTouchMove.bind(this));\n            wx.onTouchEnd(this.onTouchEnd.bind(this));\n            wx.onTouchCancel(this.onTouchCancel.bind(this));\n        }\n        \n        /**  坐标所在的Sprite触发down */\n        private onTouchStart(callback: TouchCallback) {\n            var touches = callback.touches;\n            var touch: Touch;\n            var target: Array<Sprite>;\n            var len: number = Math.min(GlobalData.TouchNum, touches.length);\n            \n            for (var i = 0; i < len; i++) {\n                touch = touches[i];\n                target = this.searchTarget(this._stage, touch.clientX, touch.clientY);\n                \n                if (target[0]) {\n                    var event: Event = new Event(touch, target[0], target[1]);\n                    EventDispatcher.dispatch(Event.MOUSE_DOWN, event, target[1]);\n                    this._model.addTarget(touch, target);\n                }\n            }\n        }\n        \n        /** 坐标所在的Sprite触发move,坐标超出之前触发down的Sprite触发out */\n        private onTouchMove(callback: TouchCallback) {\n            var touches = callback.touches;\n            var touch: Touch;\n            var len: number = Math.min(GlobalData.TouchNum, touches.length);\n            var data: [Touch, Array<Sprite>]; // 缓存的touch和target\n            var target: Sprite;\n            \n            for (var i = 0; i < len; i++) {\n                touch = touches[i];\n                data = this._model.get(touch.identifier);\n                if (data[0].clientX !== touch.clientX || data[0].clientY !== touch.clientY) {\n                    data[0] = touch;\n                    target = data[1][1];\n                    var event = new Event(touch);\n                    \n                    if (target.viewport.contains(touch.clientX, touch.clientY)) {\n                        EventDispatcher.dispatch(Event.MOUSE_MOVE, event, target);\n                    } else {\n                        EventDispatcher.dispatch(Event.MOUSE_OUT, event, target);\n                    }\n                    \n                }\n            }\n        }\n        \n        /** 坐标所在的Sprite触发up,如果是之前触发down的Sprite触发click */\n        private onTouchEnd(callback: TouchCallback) {\n            var touches = callback.touches;\n            var target: Array<Sprite>;\n            var touch: Touch; // 弹起的触摸点\n            var oldTarget: Array<Sprite>;\n            var data: [Touch, Array<Sprite>] = this._model.targets.values as [Touch, Array<Sprite>]; // 缓存的touch和target\n            var len: number = data.length;\n            \n            for (var i = 0; i < len; i++) {\n                touch = data[i][0];\n                oldTarget = data[i][1];\n                if (this.isRemoving(touch.identifier.toString(), touches)) {\n                    target = this.searchTarget(this._stage, touch.clientX, touch.clientY);\n                    if (target[0]) {\n                        var event = new Event(touch, target[0], target[1]);\n                        EventDispatcher.dispatch(Event.MOUSE_UP, event, target[1]);\n                    }\n                    if (oldTarget && oldTarget[1].viewport.contains(touch.clientX, touch.clientY)) {\n                        var event = new Event(touch, oldTarget[0], oldTarget[1]);\n                        EventDispatcher.dispatch(Event.MOUSE_CLICK, event, oldTarget[1]);\n                    }\n                }\n            }\n        }\n        \n        private isRemoving(id: string, touches: Array<Touch>): boolean {\n            for (var i = 0; i < touches.length; i++) {\n                if (id === touches[i].identifier.toString()) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        \n        private onTouchCancel(callback: TouchCallback) {\n            console.log(\"onTouchCancel\" + callback);\n            var touches = callback.touches;\n            var targets = this._model.targets;\n            for (var i = 0; i < touches.length; i++) {\n                targets.remove(touches[i].identifier.toString());\n            }\n        }\n        \n        private searchTarget(parent: Sprite, x: number, y: number): Array<Sprite> {\n            var child: Sprite;\n            var currentTarget: Sprite;\n            var target: Sprite;\n            \n            for (var i = parent.numChildren - 1; i >= 0; i--) {\n                child = parent.getChild(i).asSprite;\n                \n                if (child.mouseEnable && child.viewport.contains(x, y)) {\n                    target = child;\n                    if (child.mouseThrough) {\n                        currentTarget = child;\n                        this.searchTarget(child, x, y);\n                    }\n                    break;\n                }\n            }\n            if (!currentTarget && target) {\n                currentTarget = target;\n            }\n            return [currentTarget, target];\n        }\n    }\n}\n","/**\r\n * Created by cjb on 2018-05-05\r\n */\r\n\r\n\r\nmodule Vejay.display {\r\n    import Process = Vejay.process.Process;\r\n    import GlobalData = Vejay.global.GlobalData;\r\n    \r\n    export class DisplayProcess extends Process implements IProcess {\r\n        \r\n        constructor() {\r\n            super(\"DisplayProcess\");\r\n        }\r\n        \r\n        public get isRun(): Boolean {\r\n            return true;\r\n        }\r\n        \r\n        public complete(): void {\r\n        }\r\n        \r\n        public process(): void {\r\n            GlobalData.Ctx2d.clearRect(0, 0, GlobalData.StageWidth, GlobalData.ScreenHeight);\r\n            SingletonFactory.getInstance(Vejay.display.Stage).render(0, 0);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Created by cjb on 2018-05-01\r\n */\r\n\r\nmodule Vejay.display {\r\n    import GlobalData = Vejay.global.GlobalData;\r\n    \r\n    export class RenderContext {\r\n        private ctx0: WebGLRenderingContext;\r\n        private ctx1: CanvasRenderingContext2D;\r\n        public static _instance: RenderContext;\r\n        \r\n        constructor() {\r\n            if (RenderContext._instance) {\r\n                console.error(\"get instance instead of new\");\r\n                return;\r\n            }\r\n            this.ctx0 = GlobalData.WebGl;\r\n            this.ctx1 = GlobalData.Ctx2d;\r\n        }\r\n        \r\n        public static get instance(): RenderContext {\r\n            if (!this._instance) {\r\n                this._instance = new RenderContext();\r\n            }\r\n            return this._instance;\r\n        }\r\n        \r\n        public scale(x: number, y: number): void {\r\n\r\n        }\r\n    }\r\n}\r\n","module Vejay.manager {\n    /**\n     * 帧运算管理器\n     * 负责管理所有注册对象的enterFrame函数，对每帧一定要计算的和卡的时候可以跳帧的进行区分处理\n     * 使用方法FrameManager.add(process);\n     *\n     * @author caijingxiao\n     *\n     */\n    export class FrameManager {\n        public static readonly REAL_TIME = 2;\n        public static readonly NORMAL = 1;\n        public static readonly IDLE = 0;\n\n        public static frameRate = 1;    // 帧速度\n        private static _deltaTime = 0; // 表示从上一帧到当前帧时间，以毫秒为单位。\n        private static _isInterpolation: Boolean = false;  // 帧补偿中\n\n        private static _fps; // 帧/秒 Frames Per Second\n        private static _spf: number;// 秒/帧 Second Per Frames\n        private static _processList = [];  // 处理函数列表\n        private static _priorityTime = []; // 优先级时间，用于跳帧处理\n\n        private static _lastFrameTimestamp = 0; // 上一帧启动 Flash 运行时虚拟计算机以来经过的毫秒数\n        private static _time: number = 0.0;  // 启动FrameManager以来经过的毫秒数\n        private static _currentFrameTime;    // 当前帧所用的总时间，从退出上一帧开始计算，直到当前帧所有计算完\n        private static _serverTime = 0;\t// 服务器时间\n\n        // 计算分数\n        private static readonly SAMPLE_COUNT = 10; // 间隔几帧计算帧分数\n        private static _frameCount;    // 计算总帧数\n        private static _frameScore;    // 帧分数\n        private static _frameAvgScoreIndex = 0;\n        private static _frameAvgScore = []; // 平均帧分数\n        private static _lastScoreTime;\n\n        public static start() {\n            if (FrameManager._fps !== undefined)\n                return;\n            FrameManager._fps = 60;\n            FrameManager._spf = 1000 / FrameManager._fps;\n\n            const LOWEST = 24;  // 至少保证不低于多少帧数\n            for (var i = 0; i < 3; i++) {\n                FrameManager._processList[i] = {};\n                FrameManager._priorityTime[i] = 1000 / (LOWEST - i * LOWEST / 3);\n            }\n\n            FrameManager._frameCount = 0;\n            FrameManager._lastFrameTimestamp = Date.now();\n            window.requestAnimationFrame(FrameManager.onEnterFrame.bind(this));\n        }\n\n        /**\n         * 注册每帧运行函数\n         * 由于使用Dictionary，所以先加入的函数并不一定会先运行\n         * @param process 处理函数，函数格式Function(passedTime:int)，passedTime表示上一帧到当前帧所经过的毫秒数\n         * @param priority 优先级，默认为FrameManager.NORMAL\n         *\n         */\n        public static add(key: string, process: Function, thisObject: any, priority = FrameManager.NORMAL): void {\n            if (FrameManager._processList[priority][key] !== undefined)\n                throw new Error(\"已经注册过process\");\n            FrameManager._processList[priority][key] = process.bind(thisObject);\n        }\n\n        /**\n         * 移除每帧运行函数\n         * @param process 处理函数\n         */\n        public static remove(key: string): void {\n            for (var i = 0; i < FrameManager._processList.length; i++) {\n                if (FrameManager._processList[i][key] !== undefined) {\n                    delete FrameManager._processList[i][key];\n                    break;\n                }\n            }\n        }\n\n        // 进入帧时候触发事件        \n        private static onEnterFrame(): void {\n            var now = Date.now();\n            var passedTime = now - FrameManager._lastFrameTimestamp;    // 上一帧到当前帧所经过的时间\n\n            FrameManager._time += passedTime * FrameManager.frameRate;\n\n            FrameManager._serverTime += passedTime;\n            FrameManager._frameCount++;\n\n            FrameManager.process(passedTime, passedTime, 1);\n\n            // 经过process后的时间\n            FrameManager._currentFrameTime = Date.now() - FrameManager._lastFrameTimestamp;\n\n            FrameManager._lastFrameTimestamp = now;\n\n            window.requestAnimationFrame(FrameManager.onEnterFrame.bind(this));\n        }\n\n        private static process(passedTime:number, processTime:number, funRepeatTime:number):void\n        {\n            FrameManager._deltaTime = processTime;\n            // 实时每帧都运行\n            for (let key in FrameManager._processList[FrameManager.REAL_TIME])\n            {\n                FrameManager.callbackHandler(FrameManager._processList[FrameManager.REAL_TIME][key], processTime);\n            }\n\n            for (var i = FrameManager.NORMAL; i >= FrameManager.IDLE; --i)\n            {\n                if (passedTime > FrameManager._priorityTime[i]) // 跳帧处理\n                {\n                    if (funRepeatTime <= 1) // funRepeatTime>1 表示帧补偿，帧补偿时不跳帧\n                        continue;\n                }\n                for (let key in FrameManager._processList[i])\n                {\n                    FrameManager.callbackHandler(FrameManager._processList[i][key], processTime);\n                }\n            }\n        }\n\n        private static callbackHandler(callback: Function, passedTime: number): void {\n            if (callback.length == 0)\n                callback();\n            else if (callback.length == 1)\n                callback(passedTime);\n            else if (callback.length == 2)\n                callback(FrameManager._time, passedTime);\n            else\n                throw new Error();\n        }\n\n        /**\n         * 启动FrameManager以来经过的毫秒数\n         */\n        public static get time(): number {\n            return FrameManager._time;\n        }\n    }\n}\n","/**\r\n * Created by cjb on 2018-05-05\r\n */\r\nmodule Vejay {\r\n    export interface IProcess {\r\n        isRun: Boolean;\r\n        \r\n        process(): void;\r\n        \r\n        complete(): void;\r\n    }\r\n}\r\n\r\n\r\n"]}

(function universalModuleDefinition(root, factory) {
                var f = factory();
                if (root && root["Vejay"]) {
                    return;
                }
                var globalObject = (typeof GameGlobal !== 'undefined') ? GameGlobal : ((typeof window !== 'undefined') ? window : this);
globalObject["Vejay"] = f;
    if(typeof exports === 'object' && typeof module === 'object')
        module.exports = f;
    else if(typeof define === 'function' && define.amd)
        define(["Vejay"], factory);
    else if(typeof exports === 'object')
        exports["Vejay"] = f;
    else {
        root["Vejay"] = f;
    }
})(this, function() {
    return Vejay;
});
